---
import BaseLayout from "@layouts/BaseLayout.astro";
import Section from "@components/Section.astro";

import { Image } from "astro:assets";
import { getCollection, getEntry } from "astro:content";

const pageTitle: string = "LINC: Get help for rent in Fort Bend!";

const steps = await getCollection("steps");
const stepsWithContent = await Promise.all(steps
  .map(async (step) => ({
    ...step,
    ...await step.render(),
  })));

const topSection = await getEntry('parts', '02-how-it-works')
const topSectionWithContent = {
  ...topSection,
  ...await topSection?.render(),
}

const bottomSection = await getEntry('parts', '03-how-it-works-footer')
const bottomSectionWithContent = {
  ...bottomSection,
  ...await bottomSection?.render(),
}
---

<script>
  import scrollama from "scrollama";

  document.addEventListener("astro:page-load", () => {
    const headerHeight = document.querySelector('header')?.clientHeight || 0
    const getStepInfo = (el: HTMLElement) => ({
      stepNumber: Number(el.getAttribute('data-step')),
      position: el.offsetTop - headerHeight,
    })

    const stepElements = document.querySelectorAll('.step') as NodeListOf<HTMLElement>;
    if (!stepElements.length) {
      return
    }

    const stepInfo = [...stepElements].map(getStepInfo)
    const stepNumbers = [...stepInfo].map((item) => (item.stepNumber))
    const stepMin = Math.min(...stepNumbers)
    const stepMax = Math.max(...stepNumbers)

    const boundStepNumber = (stepNumber: number) => (
      Math.min(stepMax, Math.max(stepMin, stepNumber))
    )

    document.addEventListener('click', (clickEvent) => {
      const clickTarget = clickEvent.target as HTMLElement
      if( clickTarget.matches('.step--label') ) {
        const clickStepNumber = Number(clickTarget.dataset.step)
        const stepsElement = document.querySelector('.steps') as HTMLElement
        const clickTargetStep = stepInfo.find((info) => info.stepNumber === clickStepNumber)

        if (!clickTargetStep?.position) {
          return
        }

        if (Number(stepsElement.dataset.activeStep) !== clickStepNumber || Math.abs(window.scrollY - clickTargetStep?.position) > 100 ) {
          window.scrollTo({
            top: clickTargetStep?.position,
            left: 0,
            behavior: 'smooth',
          })
        }
      }
    })

    const scroller = scrollama();
    scroller
      .setup({
        step: ".step",
      })
      .onStepEnter((step) => {
        const stepNumber = step.element.dataset.step && Number(step.element.dataset.step) || 0
        if (!stepNumber) {
          return
        }
        if (step.direction === 'down') {
          step.element.parentElement?.parentElement?.setAttribute('data-active-step', `${boundStepNumber(stepNumber)}`)
        }
      })
      .onStepExit((step) => {
        const stepNumber = step.element.dataset.step && Number(step.element.dataset.step) || 0
        if (!stepNumber) {
          return
        }
        if (step.direction === 'up') {
          step.element.parentElement?.parentElement?.setAttribute('data-active-step', `${boundStepNumber(stepNumber - 1)}`)
        }
      });
    })
</script>

<BaseLayout pageTitle={pageTitle}>
  <main data-page="index">
    <Section {...topSectionWithContent?.data} title={topSectionWithContent?.slug}>
      <topSectionWithContent?.Content/>
    </Section>
    <section>
      <div class="steps" data-active-step="1">
        <div class="step--listing">
          {stepsWithContent
            .map((step) => 
            (<h4 class="step--label" data-step={step.data.order} data-slug={step.slug}>
              {step.data.title}
            </h4>)
          )}
        </div>
        <div class="step--info">
          {stepsWithContent
            .map((step) => 
            (<div class="step" data-step={step.data.order}>
              <div class="step--details" data-slug={step.slug}>
                <step.Content/>
              </div>
              <div class="step--figure" data-slug={step.slug}>
                <Image src={step.data.cover} alt={step.data.coverAlt}/>
              </div>
            </div>
            )
          )}
        </div>
      </div>
    </section>
    <Section {...bottomSectionWithContent?.data} title={bottomSectionWithContent?.slug} call_to_location={'https://harveyhomeconnect--linc.sandbox.my.site.com/MyLINC/s/apply-for-assistance'}>
      <bottomSectionWithContent?.Content/>
    </Section>
  </main>
</BaseLayout>

<style>
img[src*=".svg"] {
  width: 100%;
  max-width: 240px;
  margin: auto;
}

.headline em {
  text-decoration: underline;
}

.steps {
  counter-reset: primary 0;
  display: grid;
  /* grid-template-columns: 1fr 2fr; */
  grid-template-columns: 1fr 1fr;
  align-items: start;
  background-color: var(--seashell);
  padding-bottom: 2rem;
}

.step--info {
  background-color: var(--seashell);
}

.step {
  display: grid;
  /* grid-template-columns: 2fr 1fr; */
  grid-template-columns: 1fr;
  align-items: start;
  padding: 4rem 0;
  min-height: 50vh;
}

.step--figure {
  /* padding-right: 5vw; */
  text-align: center;
  padding: 0.5rem;
}

.step--label::before {
  counter-increment: primary;
  content: counter(primary)". ";
}

.step--label {
  font-weight: 300;
  text-align: right;
  cursor: pointer;
}

.step--listing {
  position: sticky;
  top: 68px;
}

.step--label {
  padding: 0.5rem;
  margin: 0;
}

.step--label:first-child {
  padding-top: 4rem;
}

.step--details {
  padding: 0 1rem;
}

[data-step] {
  opacity: .5;
  transition: 200ms ease-in-out opacity, 200ms ease-in-out color, 200ms ease-in-out background-color;
}

.steps[data-active-step=1] [data-step=1],
.steps[data-active-step=2] [data-step=2],
.steps[data-active-step=3] [data-step=3],
.steps[data-active-step=4] [data-step=4] {
  color: var(--linc--green);
  background-color: var(--white);
  opacity: 1;
}

.steps[data-active-step] .step--label[data-step]:hover {
  color: var(--linc--purple);
  opacity: 1;
}

.steps[data-active-step=1] .step--label[data-step=1],

.steps[data-active-step=2] .step--label[data-step=1],
.steps[data-active-step=2] .step--label[data-step=2],

.steps[data-active-step=3] .step--label[data-step=1],
.steps[data-active-step=3] .step--label[data-step=2],
.steps[data-active-step=3] .step--label[data-step=3],

.steps[data-active-step=4] .step--label[data-step=1],
.steps[data-active-step=4] .step--label[data-step=2],
.steps[data-active-step=4] .step--label[data-step=3],
.steps[data-active-step=4] .step--label[data-step=4],

.steps[data-active-step=4] {
  opacity: 1;
  background-color: var(--white);
}


/* @media screen and (min-width:576px) {
  
} */
@media screen and (min-width:768px) {

  .steps {
    grid-template-columns: 1fr 2fr;
  }

  .step {
    grid-template-columns: 2fr 1fr;
  }

  .step--figure {
    padding: 0 5vw 0 0;
    text-align: left;
  }

  .step--label {
    padding: 1rem;
  }
}
/* @media screen and (min-width:1024px) {
  
}
@media screen and (min-width:1280px) {
  
}
@media screen and (min-width:1536px) {
  
} */
</style>