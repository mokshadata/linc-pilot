---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import type { ImageMetadata } from 'astro';

const images = import.meta.glob<{ default: ImageMetadata }>('@assets/images/grid/compressed/*.{jpeg,jpg,png,gif}');
const photos = await getCollection("grid");
const photoGrid = Object.values(Object.groupBy(photos, (photo) => (photo.data.column)))

---
<div class="grid hero-photo-grid">
  {photoGrid.filter((col) => (col && col.length))
    .map((col) => {
      col?.sort((prev, next) => (prev.data.order - next.data.order))
      return col
    })
    .map((col) => (
      <div>
        {col && col.map((entry) => (
          <Image src={images[`/src/assets/images/grid/compressed/${entry.data.image_filename}`]()} alt={entry.data.alt} class="hero-photo-grid--item"/>
        ))}
      </div>
    ))}
</div>

<style>
.hero-photo-grid {
  grid-template-columns: repeat(auto-fit,minmax(0%,1fr));
  grid-column-gap: 0.25rem;
  grid-row-gap: 0.25rem;
  
  position: fixed;
  z-index: 2;
  padding: 0.25rem;
  width: 100%;
}

.hero-photo-grid--item {
  margin-bottom: 0.25rem;
}

@media (min-width:768px) {
  .hero-photo-grid {
    width: 50%;
  }
}
</style>